<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on 编程札记 Programming Notes</title>
    <link>https://example.com/categories/react/</link>
    <description>Recent content in React on 编程札记 Programming Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>&amp;copy; Copyright 2017 ttimehc@gmail.com</copyright>
    <lastBuildDate>Sat, 02 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://example.com/categories/react/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React &#43; Redux 应用的开发流程，以购物车为例</title>
      <link>https://example.com/posts/2017-09-02-react-redux-shopping-cart-demo/</link>
      <pubDate>Sat, 02 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/posts/2017-09-02-react-redux-shopping-cart-demo/</guid>
      <description>&lt;p&gt;&lt;strong&gt;项目的 repository：&lt;a href=&#34;https://github.com/chasecs/react-redux-shopping-cart-demo&#34;&gt;react-redux-shopping-cart-demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Redux 是最热门的 React 架构。介绍 Redux 的文章不少，官方文档的内容也非常丰富。&lt;br&gt;
本文根据个人对 Redux 的理解，提供一种和官方文档不一样的视角，阐述如何从零开始开发一个 React + Redux 应用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>React Native 原生模块库打包指南</title>
      <link>https://example.com/posts/2017-08-09-react_native_packing_native_module_for_android_n_ios/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/posts/2017-08-09-react_native_packing_native_module_for_android_n_ios/</guid>
      <description>最终项目的 repository：react-native-baidu-ocr
原生模块（Native Module）的使用方式 React Native（下称RN）的官方文档介绍了Native Modules （下称“原生模块”）的使用方法，用于访问原生平台的 API。但是，文档里的方法并不适合直接在项目使用。
以 iOS 为例，如果按照 RN 文档的做法，你需要用 Xcode 项目的 .xcodeproj 文件，在里面新建一个 .m Objective-C File 和一个 .h Header File，然后在这两个文件里实现一个“RCTBridgeModule”协议的 Objective-C 类。
这样做的缺点我想到的有两个，一是，如果要实现的原生模块多了，.m 和 .h 也会递增，目录容易混乱难以管理；二是，这样的原生模块不容易复用，其它项目没法直接使用这个原生模块。
通行的做法是，将实现后原生模块打包好，然后存放在项目的node_modules的文件内，供 APP 调用。
打包原生模块的主要工作 打包一个原生模块，最主要的工作有两部分：
 安装该模块，即 &amp;ldquo;react-native link&amp;rdquo; 完成的工作。 写代码，对于iOS，是写一个实现了“RCTBridgeModule”协议的Objective-C类；对于Android，是写一个继承了 ReactContextBaseJavaModule的Java类。  所以，要打包 React Native 的原生模块，你最好有以下知识储备：
 有 RN 开发经验。如 RN 文档所说，原生模块是该框架的高级特性，当然是有一定的经验更易理解。 了解 Java 和 Objective-C， 至少能看懂这两种代码。  本文将以百度 OCR 的 iOS SDK &amp;amp; Android SDK 为例，介绍如何将其打包为一个名为 “react-native-baidu-ocr” 的 原生模块库（library），供 RN APP 调用。</description>
    </item>
    
  </channel>
</rss>